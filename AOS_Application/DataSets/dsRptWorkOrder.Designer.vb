'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsRptWorkOrder"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsRptWorkOrder
    Inherits Global.System.Data.DataSet
    
    Private tableWORKORDERITEM As WORKORDERITEMDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("WORKORDERITEM")) Is Nothing) Then
                MyBase.Tables.Add(New WORKORDERITEMDataTable(ds.Tables("WORKORDERITEM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKORDERITEM() As WORKORDERITEMDataTable
        Get
            Return Me.tableWORKORDERITEM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsRptWorkOrder = CType(MyBase.Clone,dsRptWorkOrder)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("WORKORDERITEM")) Is Nothing) Then
                MyBase.Tables.Add(New WORKORDERITEMDataTable(ds.Tables("WORKORDERITEM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableWORKORDERITEM = CType(MyBase.Tables("WORKORDERITEM"),WORKORDERITEMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKORDERITEM) Is Nothing) Then
                Me.tableWORKORDERITEM.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsRptWorkOrder"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsRptWorkOrder.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableWORKORDERITEM = New WORKORDERITEMDataTable()
        MyBase.Tables.Add(Me.tableWORKORDERITEM)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKORDERITEM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsRptWorkOrder = New dsRptWorkOrder()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKORDERITEMRowChangeEventHandler(ByVal sender As Object, ByVal e As WORKORDERITEMRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKORDERITEMDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKORDERITEMRow)
        
        Private columnWORKORDERITEMNUMBER As Global.System.Data.DataColumn
        
        Private columnPRODUCTID As Global.System.Data.DataColumn
        
        Private columnPRODUCTDESC As Global.System.Data.DataColumn
        
        Private columnCONTAINER As Global.System.Data.DataColumn
        
        Private columnSTDGALLONS As Global.System.Data.DataColumn
        
        Private columnINVITEMNUMBER As Global.System.Data.DataColumn
        
        Private columnITEMCOMMENTS As Global.System.Data.DataColumn
        
        Private columnLOTNUMBER As Global.System.Data.DataColumn
        
        Private columnWAREHOUSELOCATION As Global.System.Data.DataColumn
        
        Private columnCUSTID As Global.System.Data.DataColumn
        
        Private columnCUSTNAME As Global.System.Data.DataColumn
        
        Private columnSHIPADDRESS1 As Global.System.Data.DataColumn
        
        Private columnSHIPADDRESS2 As Global.System.Data.DataColumn
        
        Private columnSHIPCITY As Global.System.Data.DataColumn
        
        Private columnSHIPSTATEPROV As Global.System.Data.DataColumn
        
        Private columnSHIPPOSTALCODE As Global.System.Data.DataColumn
        
        Private columnSHIPCOUNTRY As Global.System.Data.DataColumn
        
        Private columnSHIPCONTACT As Global.System.Data.DataColumn
        
        Private columnFREIGHTCARRIER As Global.System.Data.DataColumn
        
        Private columnFOB As Global.System.Data.DataColumn
        
        Private columnCUSTOMERPO As Global.System.Data.DataColumn
        
        Private columnORDERTERMS As Global.System.Data.DataColumn
        
        Private columnDELIVERYDATE As Global.System.Data.DataColumn
        
        Private columnPLANNEDSHIPDATE As Global.System.Data.DataColumn
        
        Private columnHOWRECEIVED As Global.System.Data.DataColumn
        
        Private columnORDERSTATUS As Global.System.Data.DataColumn
        
        Private columnORDERNOTES As Global.System.Data.DataColumn
        
        Private columnWORKORDERDATE As Global.System.Data.DataColumn
        
        Private columnPREPAREDBY As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCOMPANY As Global.System.Data.DataColumn
        
        Private columnSTDWEIGHT As Global.System.Data.DataColumn
        
        Private columnWORKORDERNUMBER As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKORDERITEM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKORDERITEMNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKORDERITEMNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTAINERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTAINER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STDGALLONSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTDGALLONS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVITEMNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVITEMNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCOMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCOMMENTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WAREHOUSELOCATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAREHOUSELOCATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPADDRESS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPADDRESS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPADDRESS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPSTATEPROVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPSTATEPROV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPPOSTALCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPPOSTALCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPCOUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHIPCONTACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPCONTACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FREIGHTCARRIERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREIGHTCARRIER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERTERMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERTERMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELIVERYDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIVERYDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLANNEDSHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANNEDSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HOWRECEIVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOWRECEIVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERNOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKORDERDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKORDERDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PREPAREDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREPAREDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCOMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCOMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STDWEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTDWEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKORDERNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKORDERNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKORDERITEMRow
            Get
                Return CType(Me.Rows(index),WORKORDERITEMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKORDERITEMRowChanging As WORKORDERITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKORDERITEMRowChanged As WORKORDERITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKORDERITEMRowDeleting As WORKORDERITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKORDERITEMRowDeleted As WORKORDERITEMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKORDERITEMRow(ByVal row As WORKORDERITEMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKORDERITEMRow( _
                    ByVal PRODUCTID As Integer,  _
                    ByVal PRODUCTDESC As String,  _
                    ByVal CONTAINER As String,  _
                    ByVal STDGALLONS As Integer,  _
                    ByVal INVITEMNUMBER As Integer,  _
                    ByVal ITEMCOMMENTS As String,  _
                    ByVal LOTNUMBER As String,  _
                    ByVal WAREHOUSELOCATION As String,  _
                    ByVal CUSTID As Integer,  _
                    ByVal CUSTNAME As String,  _
                    ByVal SHIPADDRESS1 As String,  _
                    ByVal SHIPADDRESS2 As String,  _
                    ByVal SHIPCITY As String,  _
                    ByVal SHIPSTATEPROV As String,  _
                    ByVal SHIPPOSTALCODE As String,  _
                    ByVal SHIPCOUNTRY As String,  _
                    ByVal SHIPCONTACT As String,  _
                    ByVal FREIGHTCARRIER As String,  _
                    ByVal FOB As String,  _
                    ByVal CUSTOMERPO As String,  _
                    ByVal ORDERTERMS As String,  _
                    ByVal DELIVERYDATE As Date,  _
                    ByVal PLANNEDSHIPDATE As Date,  _
                    ByVal HOWRECEIVED As String,  _
                    ByVal ORDERSTATUS As String,  _
                    ByVal ORDERNOTES As String,  _
                    ByVal WORKORDERDATE As Date,  _
                    ByVal PREPAREDBY As String,  _
                    ByVal SUPPLIERCOMPANY As String,  _
                    ByVal STDWEIGHT As Integer,  _
                    ByVal WORKORDERNUMBER As Integer,  _
                    ByVal QTY As Integer) As WORKORDERITEMRow
            Dim rowWORKORDERITEMRow As WORKORDERITEMRow = CType(Me.NewRow,WORKORDERITEMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PRODUCTID, PRODUCTDESC, CONTAINER, STDGALLONS, INVITEMNUMBER, ITEMCOMMENTS, LOTNUMBER, WAREHOUSELOCATION, CUSTID, CUSTNAME, SHIPADDRESS1, SHIPADDRESS2, SHIPCITY, SHIPSTATEPROV, SHIPPOSTALCODE, SHIPCOUNTRY, SHIPCONTACT, FREIGHTCARRIER, FOB, CUSTOMERPO, ORDERTERMS, DELIVERYDATE, PLANNEDSHIPDATE, HOWRECEIVED, ORDERSTATUS, ORDERNOTES, WORKORDERDATE, PREPAREDBY, SUPPLIERCOMPANY, STDWEIGHT, WORKORDERNUMBER, QTY}
            rowWORKORDERITEMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKORDERITEMRow)
            Return rowWORKORDERITEMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByWORKORDERITEMNUMBER(ByVal WORKORDERITEMNUMBER As Integer) As WORKORDERITEMRow
            Return CType(Me.Rows.Find(New Object() {WORKORDERITEMNUMBER}),WORKORDERITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKORDERITEMDataTable = CType(MyBase.Clone,WORKORDERITEMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKORDERITEMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnWORKORDERITEMNUMBER = MyBase.Columns("WORKORDERITEMNUMBER")
            Me.columnPRODUCTID = MyBase.Columns("PRODUCTID")
            Me.columnPRODUCTDESC = MyBase.Columns("PRODUCTDESC")
            Me.columnCONTAINER = MyBase.Columns("CONTAINER")
            Me.columnSTDGALLONS = MyBase.Columns("STDGALLONS")
            Me.columnINVITEMNUMBER = MyBase.Columns("INVITEMNUMBER")
            Me.columnITEMCOMMENTS = MyBase.Columns("ITEMCOMMENTS")
            Me.columnLOTNUMBER = MyBase.Columns("LOTNUMBER")
            Me.columnWAREHOUSELOCATION = MyBase.Columns("WAREHOUSELOCATION")
            Me.columnCUSTID = MyBase.Columns("CUSTID")
            Me.columnCUSTNAME = MyBase.Columns("CUSTNAME")
            Me.columnSHIPADDRESS1 = MyBase.Columns("SHIPADDRESS1")
            Me.columnSHIPADDRESS2 = MyBase.Columns("SHIPADDRESS2")
            Me.columnSHIPCITY = MyBase.Columns("SHIPCITY")
            Me.columnSHIPSTATEPROV = MyBase.Columns("SHIPSTATEPROV")
            Me.columnSHIPPOSTALCODE = MyBase.Columns("SHIPPOSTALCODE")
            Me.columnSHIPCOUNTRY = MyBase.Columns("SHIPCOUNTRY")
            Me.columnSHIPCONTACT = MyBase.Columns("SHIPCONTACT")
            Me.columnFREIGHTCARRIER = MyBase.Columns("FREIGHTCARRIER")
            Me.columnFOB = MyBase.Columns("FOB")
            Me.columnCUSTOMERPO = MyBase.Columns("CUSTOMERPO")
            Me.columnORDERTERMS = MyBase.Columns("ORDERTERMS")
            Me.columnDELIVERYDATE = MyBase.Columns("DELIVERYDATE")
            Me.columnPLANNEDSHIPDATE = MyBase.Columns("PLANNEDSHIPDATE")
            Me.columnHOWRECEIVED = MyBase.Columns("HOWRECEIVED")
            Me.columnORDERSTATUS = MyBase.Columns("ORDERSTATUS")
            Me.columnORDERNOTES = MyBase.Columns("ORDERNOTES")
            Me.columnWORKORDERDATE = MyBase.Columns("WORKORDERDATE")
            Me.columnPREPAREDBY = MyBase.Columns("PREPAREDBY")
            Me.columnSUPPLIERCOMPANY = MyBase.Columns("SUPPLIERCOMPANY")
            Me.columnSTDWEIGHT = MyBase.Columns("STDWEIGHT")
            Me.columnWORKORDERNUMBER = MyBase.Columns("WORKORDERNUMBER")
            Me.columnQTY = MyBase.Columns("QTY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnWORKORDERITEMNUMBER = New Global.System.Data.DataColumn("WORKORDERITEMNUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKORDERITEMNUMBER)
            Me.columnPRODUCTID = New Global.System.Data.DataColumn("PRODUCTID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTID)
            Me.columnPRODUCTDESC = New Global.System.Data.DataColumn("PRODUCTDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTDESC)
            Me.columnCONTAINER = New Global.System.Data.DataColumn("CONTAINER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTAINER)
            Me.columnSTDGALLONS = New Global.System.Data.DataColumn("STDGALLONS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTDGALLONS)
            Me.columnINVITEMNUMBER = New Global.System.Data.DataColumn("INVITEMNUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVITEMNUMBER)
            Me.columnITEMCOMMENTS = New Global.System.Data.DataColumn("ITEMCOMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCOMMENTS)
            Me.columnLOTNUMBER = New Global.System.Data.DataColumn("LOTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTNUMBER)
            Me.columnWAREHOUSELOCATION = New Global.System.Data.DataColumn("WAREHOUSELOCATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAREHOUSELOCATION)
            Me.columnCUSTID = New Global.System.Data.DataColumn("CUSTID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTID)
            Me.columnCUSTNAME = New Global.System.Data.DataColumn("CUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTNAME)
            Me.columnSHIPADDRESS1 = New Global.System.Data.DataColumn("SHIPADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPADDRESS1)
            Me.columnSHIPADDRESS2 = New Global.System.Data.DataColumn("SHIPADDRESS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPADDRESS2)
            Me.columnSHIPCITY = New Global.System.Data.DataColumn("SHIPCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPCITY)
            Me.columnSHIPSTATEPROV = New Global.System.Data.DataColumn("SHIPSTATEPROV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPSTATEPROV)
            Me.columnSHIPPOSTALCODE = New Global.System.Data.DataColumn("SHIPPOSTALCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPPOSTALCODE)
            Me.columnSHIPCOUNTRY = New Global.System.Data.DataColumn("SHIPCOUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPCOUNTRY)
            Me.columnSHIPCONTACT = New Global.System.Data.DataColumn("SHIPCONTACT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPCONTACT)
            Me.columnFREIGHTCARRIER = New Global.System.Data.DataColumn("FREIGHTCARRIER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREIGHTCARRIER)
            Me.columnFOB = New Global.System.Data.DataColumn("FOB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOB)
            Me.columnCUSTOMERPO = New Global.System.Data.DataColumn("CUSTOMERPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERPO)
            Me.columnORDERTERMS = New Global.System.Data.DataColumn("ORDERTERMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERTERMS)
            Me.columnDELIVERYDATE = New Global.System.Data.DataColumn("DELIVERYDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIVERYDATE)
            Me.columnPLANNEDSHIPDATE = New Global.System.Data.DataColumn("PLANNEDSHIPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANNEDSHIPDATE)
            Me.columnHOWRECEIVED = New Global.System.Data.DataColumn("HOWRECEIVED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOWRECEIVED)
            Me.columnORDERSTATUS = New Global.System.Data.DataColumn("ORDERSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERSTATUS)
            Me.columnORDERNOTES = New Global.System.Data.DataColumn("ORDERNOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERNOTES)
            Me.columnWORKORDERDATE = New Global.System.Data.DataColumn("WORKORDERDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKORDERDATE)
            Me.columnPREPAREDBY = New Global.System.Data.DataColumn("PREPAREDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREPAREDBY)
            Me.columnSUPPLIERCOMPANY = New Global.System.Data.DataColumn("SUPPLIERCOMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCOMPANY)
            Me.columnSTDWEIGHT = New Global.System.Data.DataColumn("STDWEIGHT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTDWEIGHT)
            Me.columnWORKORDERNUMBER = New Global.System.Data.DataColumn("WORKORDERNUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKORDERNUMBER)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnWORKORDERITEMNUMBER}, true))
            Me.columnWORKORDERITEMNUMBER.AutoIncrement = true
            Me.columnWORKORDERITEMNUMBER.AllowDBNull = false
            Me.columnWORKORDERITEMNUMBER.ReadOnly = true
            Me.columnWORKORDERITEMNUMBER.Unique = true
            Me.columnPRODUCTDESC.MaxLength = 200
            Me.columnCONTAINER.MaxLength = 50
            Me.columnITEMCOMMENTS.MaxLength = 2147483647
            Me.columnLOTNUMBER.MaxLength = 50
            Me.columnWAREHOUSELOCATION.MaxLength = 50
            Me.columnCUSTNAME.MaxLength = 50
            Me.columnSHIPADDRESS1.MaxLength = 50
            Me.columnSHIPADDRESS2.MaxLength = 50
            Me.columnSHIPCITY.MaxLength = 50
            Me.columnSHIPSTATEPROV.MaxLength = 50
            Me.columnSHIPPOSTALCODE.MaxLength = 24
            Me.columnSHIPCOUNTRY.MaxLength = 50
            Me.columnSHIPCONTACT.MaxLength = 50
            Me.columnFREIGHTCARRIER.MaxLength = 50
            Me.columnFOB.MaxLength = 24
            Me.columnCUSTOMERPO.MaxLength = 50
            Me.columnORDERTERMS.MaxLength = 50
            Me.columnHOWRECEIVED.MaxLength = 24
            Me.columnORDERSTATUS.MaxLength = 50
            Me.columnORDERNOTES.MaxLength = 2147483647
            Me.columnPREPAREDBY.MaxLength = 50
            Me.columnSUPPLIERCOMPANY.MaxLength = 50
            Me.columnWORKORDERNUMBER.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKORDERITEMRow() As WORKORDERITEMRow
            Return CType(Me.NewRow,WORKORDERITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKORDERITEMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKORDERITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKORDERITEMRowChangedEvent) Is Nothing) Then
                RaiseEvent WORKORDERITEMRowChanged(Me, New WORKORDERITEMRowChangeEvent(CType(e.Row,WORKORDERITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKORDERITEMRowChangingEvent) Is Nothing) Then
                RaiseEvent WORKORDERITEMRowChanging(Me, New WORKORDERITEMRowChangeEvent(CType(e.Row,WORKORDERITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKORDERITEMRowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKORDERITEMRowDeleted(Me, New WORKORDERITEMRowChangeEvent(CType(e.Row,WORKORDERITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKORDERITEMRowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKORDERITEMRowDeleting(Me, New WORKORDERITEMRowChangeEvent(CType(e.Row,WORKORDERITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKORDERITEMRow(ByVal row As WORKORDERITEMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRptWorkOrder = New dsRptWorkOrder()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKORDERITEMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKORDERITEMRow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKORDERITEM As WORKORDERITEMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKORDERITEM = CType(Me.Table,WORKORDERITEMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKORDERITEMNUMBER() As Integer
            Get
                Return CType(Me(Me.tableWORKORDERITEM.WORKORDERITEMNUMBERColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKORDERITEM.WORKORDERITEMNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.PRODUCTIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTID' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.PRODUCTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.PRODUCTDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTDESC' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.PRODUCTDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTAINER() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.CONTAINERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTAINER' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.CONTAINERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STDGALLONS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.STDGALLONSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STDGALLONS' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.STDGALLONSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVITEMNUMBER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.INVITEMNUMBERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVITEMNUMBER' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.INVITEMNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCOMMENTS() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.ITEMCOMMENTSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCOMMENTS' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.ITEMCOMMENTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOTNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.LOTNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOTNUMBER' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.LOTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WAREHOUSELOCATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.WAREHOUSELOCATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAREHOUSELOCATION' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.WAREHOUSELOCATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.CUSTIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTID' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.CUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.CUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTNAME' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.CUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPADDRESS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPADDRESS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPADDRESS1' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPADDRESS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPADDRESS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPADDRESS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPADDRESS2' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPADDRESS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPCITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPCITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPCITY' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPSTATEPROV() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPSTATEPROVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPSTATEPROV' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPSTATEPROVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPPOSTALCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPPOSTALCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPPOSTALCODE' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPPOSTALCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPCOUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPCOUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPCOUNTRY' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPCOUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHIPCONTACT() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SHIPCONTACTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPCONTACT' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SHIPCONTACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FREIGHTCARRIER() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.FREIGHTCARRIERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FREIGHTCARRIER' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.FREIGHTCARRIERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOB() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.FOBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FOB' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.FOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMERPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.CUSTOMERPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMERPO' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.CUSTOMERPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERTERMS() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.ORDERTERMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERTERMS' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.ORDERTERMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELIVERYDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.DELIVERYDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DELIVERYDATE' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.DELIVERYDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLANNEDSHIPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.PLANNEDSHIPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANNEDSHIPDATE' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.PLANNEDSHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HOWRECEIVED() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.HOWRECEIVEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOWRECEIVED' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.HOWRECEIVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.ORDERSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERSTATUS' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.ORDERSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERNOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.ORDERNOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERNOTES' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.ORDERNOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKORDERDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.WORKORDERDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKORDERDATE' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.WORKORDERDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PREPAREDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.PREPAREDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREPAREDBY' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.PREPAREDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCOMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.SUPPLIERCOMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCOMPANY' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.SUPPLIERCOMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STDWEIGHT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.STDWEIGHTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STDWEIGHT' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.STDWEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKORDERNUMBER() As Integer
            Get
                Return CType(Me(Me.tableWORKORDERITEM.WORKORDERNUMBERColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKORDERITEM.WORKORDERNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWORKORDERITEM.QTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'WORKORDERITEM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWORKORDERITEM.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTIDNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.PRODUCTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTIDNull()
            Me(Me.tableWORKORDERITEM.PRODUCTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTDESCNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.PRODUCTDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTDESCNull()
            Me(Me.tableWORKORDERITEM.PRODUCTDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTAINERNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.CONTAINERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTAINERNull()
            Me(Me.tableWORKORDERITEM.CONTAINERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTDGALLONSNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.STDGALLONSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTDGALLONSNull()
            Me(Me.tableWORKORDERITEM.STDGALLONSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVITEMNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.INVITEMNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVITEMNUMBERNull()
            Me(Me.tableWORKORDERITEM.INVITEMNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.ITEMCOMMENTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCOMMENTSNull()
            Me(Me.tableWORKORDERITEM.ITEMCOMMENTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOTNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.LOTNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOTNUMBERNull()
            Me(Me.tableWORKORDERITEM.LOTNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWAREHOUSELOCATIONNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.WAREHOUSELOCATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWAREHOUSELOCATIONNull()
            Me(Me.tableWORKORDERITEM.WAREHOUSELOCATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.CUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTIDNull()
            Me(Me.tableWORKORDERITEM.CUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.CUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTNAMENull()
            Me(Me.tableWORKORDERITEM.CUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPADDRESS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPADDRESS1Null()
            Me(Me.tableWORKORDERITEM.SHIPADDRESS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPADDRESS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPADDRESS2Null()
            Me(Me.tableWORKORDERITEM.SHIPADDRESS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPCITYNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPCITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPCITYNull()
            Me(Me.tableWORKORDERITEM.SHIPCITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPSTATEPROVNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPSTATEPROVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPSTATEPROVNull()
            Me(Me.tableWORKORDERITEM.SHIPSTATEPROVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPPOSTALCODENull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPPOSTALCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPPOSTALCODENull()
            Me(Me.tableWORKORDERITEM.SHIPPOSTALCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPCOUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPCOUNTRYNull()
            Me(Me.tableWORKORDERITEM.SHIPCOUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHIPCONTACTNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SHIPCONTACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHIPCONTACTNull()
            Me(Me.tableWORKORDERITEM.SHIPCONTACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFREIGHTCARRIERNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.FREIGHTCARRIERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFREIGHTCARRIERNull()
            Me(Me.tableWORKORDERITEM.FREIGHTCARRIERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFOBNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.FOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFOBNull()
            Me(Me.tableWORKORDERITEM.FOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMERPONull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.CUSTOMERPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMERPONull()
            Me(Me.tableWORKORDERITEM.CUSTOMERPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERTERMSNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.ORDERTERMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERTERMSNull()
            Me(Me.tableWORKORDERITEM.ORDERTERMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELIVERYDATENull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.DELIVERYDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELIVERYDATENull()
            Me(Me.tableWORKORDERITEM.DELIVERYDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLANNEDSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.PLANNEDSHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLANNEDSHIPDATENull()
            Me(Me.tableWORKORDERITEM.PLANNEDSHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHOWRECEIVEDNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.HOWRECEIVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHOWRECEIVEDNull()
            Me(Me.tableWORKORDERITEM.HOWRECEIVEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.ORDERSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERSTATUSNull()
            Me(Me.tableWORKORDERITEM.ORDERSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERNOTESNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.ORDERNOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERNOTESNull()
            Me(Me.tableWORKORDERITEM.ORDERNOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKORDERDATENull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.WORKORDERDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKORDERDATENull()
            Me(Me.tableWORKORDERITEM.WORKORDERDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPREPAREDBYNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.PREPAREDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPREPAREDBYNull()
            Me(Me.tableWORKORDERITEM.PREPAREDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCOMPANYNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.SUPPLIERCOMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCOMPANYNull()
            Me(Me.tableWORKORDERITEM.SUPPLIERCOMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTDWEIGHTNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.STDWEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTDWEIGHTNull()
            Me(Me.tableWORKORDERITEM.STDWEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableWORKORDERITEM.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableWORKORDERITEM.QTYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKORDERITEMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKORDERITEMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKORDERITEMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKORDERITEMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsRptWorkOrderTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKORDERITEMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKORDERITEM"
            tableMapping.ColumnMappings.Add("WORKORDERITEMNUMBER", "WORKORDERITEMNUMBER")
            tableMapping.ColumnMappings.Add("PRODUCTID", "PRODUCTID")
            tableMapping.ColumnMappings.Add("PRODUCTDESC", "PRODUCTDESC")
            tableMapping.ColumnMappings.Add("CONTAINER", "CONTAINER")
            tableMapping.ColumnMappings.Add("STDGALLONS", "STDGALLONS")
            tableMapping.ColumnMappings.Add("INVITEMNUMBER", "INVITEMNUMBER")
            tableMapping.ColumnMappings.Add("ITEMCOMMENTS", "ITEMCOMMENTS")
            tableMapping.ColumnMappings.Add("LOTNUMBER", "LOTNUMBER")
            tableMapping.ColumnMappings.Add("WAREHOUSELOCATION", "WAREHOUSELOCATION")
            tableMapping.ColumnMappings.Add("CUSTID", "CUSTID")
            tableMapping.ColumnMappings.Add("CUSTNAME", "CUSTNAME")
            tableMapping.ColumnMappings.Add("SHIPADDRESS1", "SHIPADDRESS1")
            tableMapping.ColumnMappings.Add("SHIPADDRESS2", "SHIPADDRESS2")
            tableMapping.ColumnMappings.Add("SHIPCITY", "SHIPCITY")
            tableMapping.ColumnMappings.Add("SHIPSTATEPROV", "SHIPSTATEPROV")
            tableMapping.ColumnMappings.Add("SHIPPOSTALCODE", "SHIPPOSTALCODE")
            tableMapping.ColumnMappings.Add("SHIPCOUNTRY", "SHIPCOUNTRY")
            tableMapping.ColumnMappings.Add("SHIPCONTACT", "SHIPCONTACT")
            tableMapping.ColumnMappings.Add("FREIGHTCARRIER", "FREIGHTCARRIER")
            tableMapping.ColumnMappings.Add("FOB", "FOB")
            tableMapping.ColumnMappings.Add("CUSTOMERPO", "CUSTOMERPO")
            tableMapping.ColumnMappings.Add("ORDERTERMS", "ORDERTERMS")
            tableMapping.ColumnMappings.Add("DELIVERYDATE", "DELIVERYDATE")
            tableMapping.ColumnMappings.Add("PLANNEDSHIPDATE", "PLANNEDSHIPDATE")
            tableMapping.ColumnMappings.Add("HOWRECEIVED", "HOWRECEIVED")
            tableMapping.ColumnMappings.Add("ORDERSTATUS", "ORDERSTATUS")
            tableMapping.ColumnMappings.Add("ORDERNOTES", "ORDERNOTES")
            tableMapping.ColumnMappings.Add("WORKORDERDATE", "WORKORDERDATE")
            tableMapping.ColumnMappings.Add("PREPAREDBY", "PREPAREDBY")
            tableMapping.ColumnMappings.Add("SUPPLIERCOMPANY", "SUPPLIERCOMPANY")
            tableMapping.ColumnMappings.Add("STDWEIGHT", "STDWEIGHT")
            tableMapping.ColumnMappings.Add("WORKORDERNUMBER", "WORKORDERNUMBER")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.AOS.My.MySettings.Default.AOSDataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     WORKORDERITEM.WORKORDERITEMNUMBER, WORKORDERITEM.WORKORDERNUMBER,     "& _ 
                "                  WORKORDERITEM.PRODUCTID, WORKORDERITEM.QTY, WORKORDERITEM.INVI"& _ 
                "TEMNUMBER, WORKORDERITEM.ITEMCOMMENTS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WORKORDERITEM.LOT"& _ 
                "NUMBER, WORKORDERITEM.WAREHOUSELOCATION, WORKORDER.CUSTID, CUSTOMER.CUSTNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                      WORKORDER.SHIPADDRESS1, WORKORDER.SHIPADDRESS2, WORKORDER."& _ 
                "SHIPCITY, WORKORDER.SHIPSTATEPROV, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WORKORDER.SHIPPOSTALC"& _ 
                "ODE, WORKORDER.SHIPCOUNTRY, WORKORDER.SHIPCONTACT, WORKORDER.FREIGHTCARRIER, WOR"& _ 
                "KORDER.FOB, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WORKORDER.CUSTOMERPO, WORKORDER.ORDERTERMS, "& _ 
                "WORKORDER.DELIVERYDATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WORKORDER.PLANNEDSHIPDATE, WORKO"& _ 
                "RDER.HOWRECEIVED, WORKORDER.ORDERSTATUS, WORKORDER.ORDERNOTES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       WORKORDER.WORKORDERDATE, WORKORDER.PREPAREDBY, WORKORDER.SUPPLIERCOMPANY,"& _ 
                " PRODUCT.PRODUCTDESC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      PRODUCT.STDGALLONS, PRODUCT.STDWEI"& _ 
                "GHT, PRODUCT.CONTAINER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CUSTOMER INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "WORKORDER ON CUSTOMER.CUSTID = WORKORDER.CUSTID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  WORKORDERITEM INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      PRODUCT ON WORKORDERITEM.PRODU"& _ 
                "CTID = PRODUCT.PRODUCTID ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WORKORDER.WORKORDERNUMBER = "& _ 
                "WORKORDERITEM.WORKORDERNUMBER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (WORKORDERITEM.WORKORDERNUMBER = @WorkO"& _ 
                "rderNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WorkOrderNumber", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKORDERNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRptWorkOrder.WORKORDERITEMDataTable, ByVal WorkOrderNumber As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(WorkOrderNumber,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal WorkOrderNumber As Integer) As dsRptWorkOrder.WORKORDERITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(WorkOrderNumber,Integer)
            Dim dataTable As dsRptWorkOrder.WORKORDERITEMDataTable = New dsRptWorkOrder.WORKORDERITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
